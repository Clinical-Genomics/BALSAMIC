#!python
# vim: syntax=python tabstop=4 expandtab
# coding: utf-8

import os
from BALSAMIC.utils.rule_utils import get_result_dir, get_vcf

shell.prefix("set -eo pipefail; ")

rule_dir = config["rule_directory"]
bam_dir = get_result_dir(config) + "/bam/"
cnv_dir = get_result_dir(config) + "/cnv/"
cutadapt_dir = get_result_dir(config) + "/cutadapt/"
fastqc_dir = get_result_dir(config) + "/fastqc/"
result_dir = get_result_dir(config) + "/"
vcf_dir = get_result_dir(config) + "/vcf/"
vep_dir = get_result_dir(config) + "/vep/"

include:
  rule_dir + "snakemake_rules/umi/fgbio_v2.rule"
include:
  rule_dir + "snakemake_rules/variant_calling/split_bed.rule"
include:
  rule_dir + "snakemake_rules/variant_calling/mergetype_single_umi.rule"
include:
  rule_dir + "snakemake_rules/umi/vardict_single_umi.rule"

var_type = ["SNV"]
var_class = ["somatic", "germline"]

rule all:
  input:
    expand(vcf_dir + "{vcf}.vcf.gz", vcf=get_vcf(config, ["vardict"], [config["analysis"]["sample_id"]])),
    expand(bam_dir + "{sample}.unalg.umi.mrkadp.bwa.map.umi.cnsunalg.bwa.map.fltr.clip.bam", sample=config["samples"]),
    expand(bam_dir + "{sample}.unalg.umi.mrkadp.bwa.map.umi.bam.duplex_qc.pdf", sample=config["samples"])
  output:
    os.path.join(get_result_dir(config), "analysis_finish")
  shell:
    "date +'%Y-%M-%d T%T %:z' > {output}"
