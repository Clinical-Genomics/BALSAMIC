"""Rules to process VCF reference files."""


wildcard_constraints:
    vcf="|".join(cache_config.get_reference_file_paths_by_file_type(file_type=FileType.VCF)),


rule compress_vcfs:
    """Compress VCF reference files."""
    input:
        singularity_image=f"{config['containers_dir']}/{config['bioinfo_tools']['bgzip']}.{FileType.SIF}",
        vcf="{vcf}",
    output:
        vcf_gz=f"{{vcf}}.{FileType.GZ}",
    singularity:
        f"{config['containers_dir']}/{config['bioinfo_tools']['bgzip']}.{FileType.SIF}"
    message:
        "Compressing VCF variant file {input.vcf}"
    benchmark:
        f"{{vcf}}.{FileType.GZ}.benchmark.{FileType.TSV}"
    log:
        f"{{vcf}}.{FileType.GZ}.{FileType.LOG}",
    shell:
        """
        bgzip "{input.vcf}" &> "{log}"
        """


rule index_vcfs:
    """Index VCF reference files."""
    input:
        singularity_image=f"{config['containers_dir']}/{config['bioinfo_tools']['tabix']}.{FileType.SIF}",
        vcf_gz=f"{{vcf}}.{FileType.GZ}",
    output:
        vcf_gz_tbi=f"{{vcf}}.{FileType.GZ}.{FileType.TBI}",
    singularity:
        f"{config['containers_dir']}/{config['bioinfo_tools']['tabix']}.{FileType.SIF}"
    message:
        "Indexing VCF variant file {input.vcf_gz}"
    benchmark:
        f"{{vcf}}.{FileType.GZ}.{FileType.TBI}.benchmark.{FileType.TSV}"
    log:
        f"{{vcf}}.{FileType.GZ}.{FileType.TBI}.{FileType.LOG}",
    shell:
        """
        tabix -p vcf "{input.vcf_gz}" &> "{log}"
        """

rule postprocess_clinvar:
    """Add new info-field based on clinvar variant ID: CLNVID"""
    input:
        clinvar=f"{cache_config.cache_config.references.clinvar.file_path.{FileType.GZ}",
    output:
        clinvar=f"{cache_config.references.clinvar.final_file_path}.{FileType.GZ}",
    singularity:
        f"{config['containers_dir']}/{config['bioinfo_tools']['bcftools']}.{FileType.SIF}"
    message:
        "Adding INFO field CLNVID to ClinVar VCF: {input.clinvar}"
    params:
        header_path=cache_config.variants_dir.as_posix()
    benchmark:
        f"{cache_config.references.clinvar.file_path}.benchmark.{FileType.TSV}"
    log:
        f"{cache_config.references.clinvar.file_path}.benchmark.{FileType.LOG}",
    shell:
        """
        echo '##INFO=<ID=CLNVID,Number=1,Type=Integer,Description="ClinVar Variation ID">' > {params.header_path}/clnvid_header.txt

        bcftools annotate --header-lines {params.header_path}/clnvid_header.txt {input.clinvar} | perl -nae 'if($_=~/^#/) { print $_;} else { chomp; my $line = $_; say STDOUT $_ . q{;CLNVID=} . $F[2] }' | bgzip -c > {output.clinvar}
        """