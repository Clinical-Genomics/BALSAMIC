# vim: syntax=python tabstop=4 expandtab
# coding: utf-8


rule preprocess_refseq:
    """Preprocess RefSeq's gene files."""
    input:
        singularity_image=f"{config['containers_dir']}/{config['bioinfo_tools']['bedtools']}.{FileType.SIF}",
        access_regions=cache_config.references.access_regions.file_path,
        refgene_sql=cache_config.references.refgene_sql.file_path,
        refgene_txt=cache_config.references.refgene_txt.file_path,
    output:
        refgene_bed=cache_config.references.get_refgene_bed_file(),
        refgene_flat=cache_config.references.get_refgene_flat_file(),
    params:
        refseq_script_path=REFSEQ_SCRIPT_PATH,
    singularity:
        f"{config['containers_dir']}/{config['bioinfo_tools']['bedtools']}.{FileType.SIF}"
    threads: get_threads(cluster_config, "preprocess_refseq")
    message:
        "Preprocessing RefSeq's gene files {input.refgene_sql} and {input.refgene_txt}"
    benchmark:
        f"{cache_config.references.get_refgene_flat_file()}.{FileType.TSV}"
    log:
        refgene_bed=f"{cache_config.references.get_refgene_bed_file()}.{FileType.LOG}",
        refgene_flat=f"{cache_config.references.get_refgene_flat_file()}.{FileType.LOG}",
    shell:
        """
        # Generate RefSeq's BED file
        (
            header=$(awk -f "{params.refseq_script_path}" "{input.refgene_sql}")
            (echo \"$header\"; cat "{input.refgene_txt}") |\
                csvcut -t -c chrom,exonStarts,exonEnds,name,score,strand,exonCount,txStart,txEnd,name2 |\
                csvformat -T |\
                bedtools expand -c 2,3 |\
                awk '$1~/chr[1-9]/ && $1!~/[_]/' |\
                cut -c 4- |\
                sort -k1,1 -k2,2n > "{output.refgene_bed}"
                
        ) &> "{log.refgene_bed}"
        
        # Generate RefSeq's flat file and remove "chr" prefix from refgene_txt and access_regions files
        (
            awk -v OFS=\"\\t\" '$3!~/_/ {{ gsub(\"chr\",\"\",$3); $1=$13; print }}' "{input.refgene_txt}" |\
                cut -f 1-11 > "{output.refgene_flat}"
            sed -i 's/chr//g' "{input.refgene_txt}"
            sed -i 's/chr//g' "{input.access_regions}"
        ) &> "{log.refgene_flat}"
        """
