# vim: syntax=python tabstop=4 expandtab
# coding: utf-8



rule mosdepth_coverage:
    input:
        bam = lambda wildcards: sample_dict[wildcards.sample]["bam"]["final_bam"],
        bed = config["panel"]["capture_kit"]
    output:
        bam_dir + "{sample}.mosdepth.global.dist.txt",
        bam_dir + "{sample}.mosdepth.region.dist.txt",
        bam_dir + "{sample}.mosdepth.summary.txt",
        bam_dir + "{sample}.per-base.bed.gz",
        bam_dir + "{sample}.regions.bed.gz"
    benchmark:
        Path(benchmark_dir, "mosdepth_coverage_" + "{sample}.tsv").as_posix()
    singularity:
        Path(singularity_image, config["bioinfo_tools"].get("mosdepth") + ".sif").as_posix()
    params:
        mapq = '20',
        samflag = '1796',
        quantize = '0:1:50:150:',
        sample_name = '{sample}',
        output_dir = bam_dir,
    threads:
        get_threads(cluster_config, "mosdepth_coverage")
    message:
        "Calculate coverage using mosdepth for sample {params.sample_name}"
    shell:
        """
export MOSDEPTH_Q0=NO_COVERAGE;
export MOSDEPTH_Q1=LOW_COVERAGE;
export MOSDEPTH_Q2=CALLABLE;
export MOSDEPTH_Q3=HIGH_COVERAGE;
    
mosdepth \
--by {input.bed} \
--mapq {params.mapq} \
--flag {params.samflag} \
--quantize {params.quantize} \
--threads {threads} \
{params.output_dir}/{params.sample_name} \
{input.bam};
        """
