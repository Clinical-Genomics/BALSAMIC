
rule create_d4file:
    input:
        bam = lambda wildcards: config_model.get_final_bam_name(bam_dir = bam_dir, sample_name = wildcards.sample),
    output:
        d4file = Path(qc_dir,"{sample_type}.{sample}.d4").as_posix(),
    benchmark:
        Path(benchmark_dir, "create_d4file.{sample_type}.{sample}.tsv").as_posix()
    singularity:
        Path(singularity_image, config["bioinfo_tools"].get("d4tools") + ".sif").as_posix()
    params:
        housekeeper_id = {"id": "{sample}", "tags": "qc-metrics"},
        sample = "{sample}"
    message:
        "Creating d4 coverage file for sample {params.sample}"
    shell:
        """
     d4tools create -Az {input.bam} {output.d4file}
        """
