# vim: syntax=python tabstop=4 expandtab
# coding: utf-8

# Following rule will take input fastq files, align them using bwa mem, and convert the output to sam format


rule fastqc:
    input:
        fastq_r1 = concatenated_fastq_dir + "{sample}_R_1.fastq.gz",
        fastq_r2 = concatenated_fastq_dir + "{sample}_R_2.fastq.gz",
    output:
        fastqc_r1 = fastqc_dir + "{sample}_R_1_fastqc.zip",
        fastqc_r2 = fastqc_dir + "{sample}_R_2_fastqc.zip"
    benchmark:
        Path(benchmark_dir, "fastqc_{sample}.tsv").as_posix()
    singularity:
        Path(singularity_image, config["bioinfo_tools"].get("fastqc") + ".sif").as_posix()
    params:
        fastqc_dir = fastqc_dir,
        sample = "{sample}",
        tmpdir = tempfile.mkdtemp(prefix=tmp_dir),
    threads: get_threads(cluster_config, "fastqc")
    message:
        "Running FastQC on {params.sample}"
    shell:
        """
mkdir -p {params.tmpdir};
export TMPDIR={params.tmpdir};
    
fastqc --threads {threads} {input.fastq_r1} \
--dir {params.tmpdir} \
--outdir {params.fastqc_dir};
    
fastqc --threads {threads} {input.fastq_r2} \
--dir {params.tmpdir} \
--outdir {params.fastqc_dir};
        """
