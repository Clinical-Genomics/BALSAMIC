# vim: syntax=python tabstop=4 expandtab
# coding: utf-8

rule fastqc:
    """Perform quality control checks on raw sequence data"""
    input:
        fastqs = lambda wildcards: balsamic.get_all_fastqs_for_sample(sample_name = wildcards.sample)
    output:
        fastqccomplete = fastqc_dir + "{sample}_fastqc.completed"
    benchmark:
        Path(benchmark_dir, "fastqc_{sample}.tsv").as_posix()
    singularity:
        Path(singularity_image, config["bioinfo_tools"].get("fastqc") + ".sif").as_posix()
    params:
        fastqc_dir = fastqc_dir,
        sample_id = "{sample}",
        tmpdir = tempfile.mkdtemp(prefix=tmp_dir)
    threads: get_threads(cluster_config, "fastqc")
    message:
        "Running FastQC on {params.sample_id}"
    shell:
        """
mkdir -p {params.tmpdir};
export TMPDIR={params.tmpdir};
    
fastqc --threads {threads} {input.fastqs} {input.sample_rev_fastqs} \
--dir {params.tmpdir} \
--outdir {params.fastqc_dir};
 
echo "Ran FastQC on {input.sample_fwd_fastqs} {input.sample_rev_fastqs}" >> {output.fastqccomplete}
        """
