# vim: syntax=python tabstop=4 expandtab
# coding: utf-8

from BALSAMIC.utils.rule import get_threads

rule sentieon_DNAscope:
    input:
        ref = config["reference"]["reference_genome"],
        dbsnp = config["reference"]["dbsnp"],
        bam = bam_dir + "{sample}.dedup.realign.bam",
        recal_table = bam_dir + "{sample}.dedup.realign.recal_data.table"
    output:
        vcf = vcf_dir + "SNV.germline.{sample}.dnascope.vcf.gz",
    params:
        tmpdir = tmp_dir,
        sentieon_exec = config["SENTIEON_INSTALL_DIR"] + "/bin/sentieon",
        sentieon_lic = config["SENTIEON_LICENSE"],
        sentieon_ml_dnascope = SENTIEON_DNASCOPE
    threads: get_threads(cluster_config, 'sentieon_DNAscope')
    log: 
        vcf_dir + "{sample}.dnascope.log"
    benchmark:
        benchmark_dir + 'sentieon_DNAscope_' + "{sample}.dnascope.tsv"
    shell:
    	"""
rand_str=$(openssl rand -hex 5);
tmpdir={params.tmpdir}/${{rand_str}};
mkdir -p ${{tmpdir}};
export TMPDIR=${{tmpdir}};
export SENTIEON_TMPDIR=${{tmpdir}};
export SENTIEON_LICENSE={params.sentieon_lic};
export SENTIEON_DNASCOPE={params.sentieon_ml_dnascope};

{params.sentieon_exec} driver -t {threads} -r {input.ref} -i {input.bam} -q {input.recal_table} --algo DNAscope -d {input.dbsnp} {output.vcf}
		"""


# rule sentieon_filter_DNAscope:
#     input:
#         ref = config["reference"]["reference_genome"],
#         dnascope_vcf = vcf_dir + "sentieon_dnascope/SNV.germline.{sample}.dnascope.vcf.gz"
#     output:
#         dnascope_filtered_vcf = vcf_dir + "SNV.germline.{sample}.dnascope.vcf.gz"
#     params:
#         sentieon_exec = SENTIEON_INSTALL_DIR + "/bin/sentieon",
#         sentieon_lic = SENTIEON_LICENSE, 
#         sentieon_ml_dnascope = SENTIEON_DNASCOPE
#     threads: 16
#     log:
#         vcf_dir + "{sample}.dnascope.filtered.log"
#     benchmark:
#         benchmark_dir + "{sample}.dnascope_filter.tsv"
#     shell:
#         """
# export SENTIEON_LICENSE={params.sentieon_lic};
# export SENTIEON_DNASCOPE={params.sentieon_ml_dnascope};

# {params.sentieon_exec} driver -t {threads} -r {input.ref} --algo DNAModelApply --model {params.sentieon_ml_dnascope} -v {input.dnascope_vcf} {output.dnascope_filtered_vcf}
#         """

