# vim: syntax=python tabstop=4 expandtab
# coding: utf-8

__author__ = "Hassan Foroughi Asl"


rule sentieon_DNAscope:
    input:
        ref = config["reference"]["reference_genome"],
        dbsnp = config["reference"]["dbsnp"],
        bam = bam_dir + "{sample}.dedup.bam"
    output:
        vcf = vcf_dir + "SNV.germline.{sample}.dnascope.vcf.gz",
    params:
        sentieon_exec = SENTIEON_INSTALL_DIR + "/bin/sentieon",
        sentieon_lic = SENTIEON_LICENSE, 
        sentieon_ml_dnascope = SENTIEON_DNASCOPE
    threads: 16
    log: 
        vcf_dir + "{sample}.dnascope.log"
    shell:
        """
        export SENTIEON_LICENSE={params.sentieon_lic};
        {params.sentieon_exec} - t {threads} -r {input.ref} -i {input.bam} \
                    --algo DNAscope --pcr_indel_model NONE -d {input.dbsnp} --var_type snp,indel \
                    --model {params.sentieon_ml_dnascope} {output.vcf}
        """


rule sentieon_filter_DNAscope:
    input:
        ref = config["reference"]["reference_genome"],
        dnascope_vcf = vcf_dir + "SNV.germline.{sample}.dnascope.vcf.gz"
    output:
        filtered_vcf = vcf_dir + "SNV.germline.{sample}.dnascope_filtered.vcf.gz"
    params:
        sentieon_exec = SENTIEON_INSTALL_DIR + "/bin/sentieon",
        sentieon_lic = SENTIEON_LICENSE, 
        sentieon_ml_dnascope = SENTIEON_DNASCOPE
    threads: 16
    log:
        vcf_dir + "{sample}.dnascope.filtered.log"
    shell:
        """
        {params.sentieon_exec} driver - t {threads} -r {input.ref} --algo DNAModelApply \
                    --model {params.sentieon_ml_dnascope} -v {input.dnascope_vcf} {output.filtered_vcf}
        """

