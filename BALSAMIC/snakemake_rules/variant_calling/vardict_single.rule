# vim: syntax=python tabstop=4 expandtab
# coding: utf-8

import os
from BALSAMIC.utils.rule import get_conda_env, get_chrom

chromlist = config["panel"]["chrom"]
capture_kit = os.path.split(config["panel"]["capture_kit"])[1]

rule vardict_single:
  input:
    fa = config["reference"]["reference_genome"],
    bamT = bam_dir + "tumor.merged.bam",
    bed = vcf_dir + "split_bed/" + "{bedchrom}" + "." + capture_kit,
  output:
    vcf_dir + "vardict/split_vcf/" + "{bedchrom}_vardict.vcf.gz"
  params:
    af = "0.001",
    max_pval = "0.9",
    max_mm = "4.5",
    col_info = "-c 1 -S 2 -E 3 -g 4",
    name = config["analysis"]["case_id"],
    conda = get_conda_env(config["conda_env_yaml"],"vardict"),
  shell:
    "source activate {params.conda}; "
    "vardict -G {input.fa} -f {params.af} -N {params.name} "
        "-b {input.bamT} "
        "{params.col_info} {input.bed} "
        "| teststrandbias.R "
        "| var2vcf_valid.pl -P {params.max_pval} "
        "-m {params.max_mm} -E -f {params.af} -N {params.name} "
        "| bgzip > {output}; "
    "tabix -p vcf {output}; "
    "source deactivate;"

rule vardict_merge:
  input:
    expand(vcf_dir + "vardict/split_vcf/{chrom}_vardict.vcf.gz", chrom=chromlist)
  output:
    vcf_dir + "SNV.somatic." + config["analysis"]["case_id"] + ".vardict.vcf.gz"
  params:
    conda = get_conda_env(config["conda_env_yaml"],"vardict"),
  shell:
    "source activate {params.conda} ; "
    "bcftools concat {input} | bcftools sort - | bgzip > {output}; "
    "tabix -f -p vcf {output}; "
    "source deactivate;" 
