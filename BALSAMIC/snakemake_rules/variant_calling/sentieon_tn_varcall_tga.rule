# vim: syntax=python tabstop=4 expandtab
# coding: utf-8

# Variant-calling using TNscope


rule sentieon_tnscope_tga_tumor_normal:
    input:
        bamN = config_model.get_final_bam_name(bam_dir = bam_dir, sample_name = normal_sample),
        bamT = config_model.get_final_bam_name(bam_dir = bam_dir, sample_name = tumor_sample),
        ref_fa = config["reference"]["reference_genome"],
        bed = config["panel"]["capture_kit"],
        dbsnp = config["reference"]["dbsnp"]
    output:
        vcf_tnscope = vcf_dir + "sentieon_tnscope" + "/" + "ALL.somatic." + config["analysis"]["case_id"] + ".tnscope.vcf.gz",
        namemap_snv = vcf_dir + "SNV.somatic." + config["analysis"]["case_id"] + ".tnscope.sample_name_map",
        namemap_sv = vcf_dir + "SV.somatic." + config["analysis"]["case_id"] + ".tnscope.sample_name_map",
    benchmark:
        Path(benchmark_dir, "sentieon_tnscope_umi_" + config["analysis"]["case_id"] + ".tsv").as_posix()
    params:
        housekeeper_id = {"id": config["analysis"]["case_id"], "tags": "research"},
        tmpdir = tempfile.mkdtemp(prefix=tmp_dir),
        sentieon_exec = config["SENTIEON_EXEC"],
        sentieon_lic = config["SENTIEON_LICENSE"],
        tumor_af = params.tnscope_tga.filter_tumor_af,
        algo = params.tnscope_tga.algo,
        tumor_lod = params.tnscope_tga.min_tumorLOD,
        init_tumor_lod = params.tnscope_tga.init_tumorLOD,
        error_rate = params.tnscope_tga.error_rate,
        prune_factor = params.tnscope_tga.prunefactor,
        pcr_model = params.tnscope_tga.pcr_model,
        padding = params.tnscope_tga.padding,
        tumor = "TUMOR",
        normal = "NORMAL",
        case_name= config["analysis"]["case_id"]
    threads:
        get_threads(cluster_config, "sentieon_tnscope_umi")
    message:
        "Calling single nucleotide variants using TNscope for {params.case_name}"
    shell:
        """
mkdir -p {params.tmpdir};
export TMPDIR={params.tmpdir};
export SENTIEON_TMPDIR={params.tmpdir};
export SENTIEON_LICENSE={params.sentieon_lic};

{params.sentieon_exec} driver \
-t {threads} \
-r {input.ref_fa} \
-i {input.bamT} \
-i {input.bamN} \
--interval {input.bed} \
--interval_padding {params.padding} \
--algo {params.algo} \
--tumor_sample {params.tumor} \
--normal_sample {params.normal} \
--dbsnp {input.dbsnp} \
--min_tumor_allele_frac {params.tumor_af} \
--filter_t_alt_frac {params.tumor_af} \
--min_init_tumor_lod {params.init_tumor_lod} \
--min_tumor_lod {params.tumor_lod} \
--max_error_per_read {params.error_rate} \
--pcr_indel_model {params.pcr_model} \
--prune_factor {params.prune_factor} \
{output.vcf_tnscope};

echo -e \"{params.tumor}\\tTUMOR\\n{params.normal}\\tNORMAL\" > {output.namemap_snv};
cp {output.namemap_snv} {output.namemap_sv}
        """
