# vim: syntax=python tabstop=4 expandtab
# coding: utf-8

import os
from BALSAMIC.utils.rule import get_conda_env
from BALSAMIC.utils.rule import get_chrom
from BALSAMIC.utils.rule import get_picard_mrkdup

picarddup = get_picard_mrkdup(config)

chromlist = config["panel"]["chrom"]
capture_kit = os.path.split(config["panel"]["capture_kit"])[1]

rule mutect2_somatic:
  input:
    fa = config["reference"]["reference_genome"],
    dbsnp = config["reference"]["dbsnp"],
    cosmic = config["reference"]["cosmic"],
    bamT = bam_dir + "tumor.sorted." + picarddup + ".ralgn.bsrcl.merged.bam",
    bamN = bam_dir + "normal.sorted." + picarddup + ".ralgn.bsrcl.merged.bam",
    bed = vcf_dir + "split_bed/" + "{bedchrom}" + "." + capture_kit,
  output:
    vcf_dir + "mutect/split_vcf/{bedchrom}_mutect.vcf.gz"
  params:
    result_dir = vcf_dir + "mutect/",
    conda = get_conda_env(config["conda_env_yaml"],"gatk")
  threads: 6
  shell:
    "source activate {params.conda};"
    "mkdir -p {params.result_dir}; "
    "gatk3  -T MuTect2 "
        "-R {input.fa} "
        "--cosmic {input.cosmic} "
        "--dbsnp {input.dbsnp} "
        "-I:normal {input.bamN} "
        "-I:tumor {input.bamT} "
        "--annotation Coverage --useNewAFCalculator --annotation VariantType --annotateNDA  --annotation RMSMappingQuality " 
        "--disable_auto_index_creation_and_locking_when_reading_rods "
        "-L {input.bed} "
    " | bgzip > {output}; "
    "tabix -p vcf {output}; " 
    "source deactivate; "

rule mutect2_merge:
  input:
    expand(vcf_dir + "mutect/split_vcf/{chrom}_mutect.vcf.gz", chrom=chromlist) 
  output:
    vcf_dir + "SNV.somatic." + config["analysis"]["case_id"] + ".mutect.vcf.gz"
  params:
    conda = get_conda_env(config["conda_env_yaml"],"bcftools"),
  shell:
    "source activate {params.conda} ; "
    "bcftools concat {input} | bcftools sort - | bgzip > {output}; "
    "tabix -f -p vcf {output}; "
    "source deactivate;" 
