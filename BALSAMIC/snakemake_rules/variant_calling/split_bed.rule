# vim: syntax=python tabstop=4 expandtab
# coding: utf-8

rule split_bed_by_chrom:
    input:
        bed = config["panel"]["capture_kit"],
        chrom = config["reference"]["genome_chrom_size"],
        bam = bam_dir + "tumor.merged.bam"
    output:
        bed = expand(vcf_dir + "split_bed/" + "{chrom}." + capture_kit, chrom=chromlist) 
    params:
        tmpdir = tmp_dir,
        split_bed_dir = vcf_dir + "split_bed/",
        origin_bed = capture_kit,
        conda = get_conda_env(config["conda_env_yaml"],"bedtools"),
    benchmark:
        benchmark_dir + 'split_bed_by_chrom.tsv'
    singularity: singularity_image
    shell:
        "source activate {params.conda}; "
        "tmpdir={params.tmpdir}/${{rand_str}}; "
        "mkdir -p ${{tmpdir}}; "
        "export TMPDIR=${{tmpdir}}; "
        "chromlist=`cut -f 1 {input.bed} | sort -u`; "
        "sed 's/^chr//g;/_/d' {input.chrom} | sort -k1,1 > {params.split_bed_dir}hg19.chrom.sizes; "
        "for c in $chromlist; "
        "do "
            "awk -v C=$c '$1==C' {input.bed} "
            " | bedtools slop -b 100 -i - -g {params.split_bed_dir}hg19.chrom.sizes "
            " | sort -k1,1 -k2,2n "
            " | bedtools merge "
            " > {params.split_bed_dir}$c.{params.origin_bed}; "
        "done; "
        "unset chromlist; "
        "readlink -e {input.bam}; "
