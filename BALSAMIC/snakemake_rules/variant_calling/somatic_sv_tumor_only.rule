# vim: syntax=python tabstop=4 expandtab
# coding: utf-8

tumor_bam = "tumor.merged.bam"

if config["analysis"]["sequencing_type"] == 'wgs':
    tumor_bam = "{tumor}.dedup.realign.bam".format(tumor = get_sample_type(config["samples"], "tumor")[0])


rule manta_tumor_only:
    input:
      fa = config["reference"]["reference_genome"],
      bamT = bam_dir + tumor_bam
    output:
      candidateindel = vcf_dir + "manta/results/variants/candidateSmallIndels.vcf.gz",
      final = vcf_dir + "SV.somatic." + config["analysis"]["case_id"] + ".manta.vcf.gz",
      namemap = vcf_dir + "SV.somatic." + config["analysis"]["case_id"] + ".manta.sample_name_map"
    params:
      tmpdir = vcf_dir + "manta/",
      runmode = "local",
      conda = config["bioinfo_tools"].get("manta")
    threads: get_threads(cluster_config, "manta") 
    singularity: Path(singularity_image, config["bioinfo_tools"].get("manta") + ".sif").as_posix() 
    benchmark: 
        benchmark_dir + 'manta_tumor_only_' + config["analysis"]["case_id"] + ".manta.tsv"
    shell:
      "source activate {params.conda};"
      "rm -rf {params.tmpdir}; "
      "configManta.py "
          "--tumorBam={input.bamT} "
          "--referenceFasta={input.fa} "
          "--runDir={params.tmpdir}; "
      "python {params.tmpdir}/runWorkflow.py -m {params.runmode} -j {threads};"
      "cp {params.tmpdir}/results/variants/tumorSV.vcf.gz {output.final}; "
      "tabix -p vcf -f {output.final}; "
      "echo -e \"TUMOR\\tTUMOR\" > {output.namemap}; " 
      
