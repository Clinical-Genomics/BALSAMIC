# vim: syntax=python tabstop=4 expandtab
# coding: utf-8

from snakemake.shell import shell

from BALSAMIC.utils.rule import get_conda_env
from BALSAMIC.utils.rule import get_sample_type
from BALSAMIC import __version__ as bv

normal_bam = "normal.merged.bam"
tumor_bam = "tumor.merged.bam"

if config["analysis"]["sequencing_type"] == 'wgs':
    normal_bam = "{normal}.dedup.realign.bam".format(normal = get_sample_type(config["samples"], "normal")[0])
    tumor_bam = "{tumor}.dedup.realign.bam".format(tumor = get_sample_type(config["samples"], "tumor")[0])


rule manta_tumor_normal:
    input:
        fa = config["reference"]["reference_genome"] ,
        bamN = bam_dir + normal_bam, 
        bamT = bam_dir + tumor_bam,
    output:
        candidateindel = vcf_dir + "manta/results/variants/candidateSmallIndels.vcf.gz",
        final = vcf_dir + "SV.somatic." + config["analysis"]["case_id"] + ".manta.vcf.gz",
    params:
        tmpdir = vcf_dir + "manta/",
        runmode = "local",
        conda = get_conda_env(config["conda_env_yaml"],"manta")
    singularity: singularity_image
    benchmark: 
        benchmark_dir + config["analysis"]["case_id"] + ".manta.tsv"
    threads: 4
    shell:
        "source activate {params.conda};"
        "rm -rf {params.tmpdir}; "
        "configManta.py "
            "--normalBam={input.bamN} "
            "--tumorBam={input.bamT} "
            "--referenceFasta={input.fa} "
            "--runDir={params.tmpdir}; "
        "python {params.tmpdir}/runWorkflow.py -m {params.runmode} -j {threads};"
        "cp {params.tmpdir}/results/variants/somaticSV.vcf.gz {output.final}; "
        "tabix -p vcf -f {output.final}; "
        "source deactivate; "
