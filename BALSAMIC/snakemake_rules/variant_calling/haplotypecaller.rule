# vim: syntax=python tabstop=4 expandtab
# coding: utf-8

__author__ = "Hassan Foroughi Asl"

from BALSAMIC.tools import get_result_dir, get_conda_env, get_picard_mrkdup

bam_dir = get_result_dir(config) + "/bam/"
vcf_dir = get_result_dir(config) + "/vcf/"

var_caller = "haplotypecaller"
haplotypecaller_dir = var_caller + "/"

chromlist = get_chrom(config["path"]["panel"] + config["bed"]["capture_kit"])
picarddup = get_picard_mrkdup(config)

rule haplotypecaller:
  input:
    fa = config["path"]["genomefa"] + config["references"]["genomefa"],
    bam = bam_dir + "{sample}.sorted." + picarddup  + ".bam",
    bed = vcf_dir + "split_bed/" + "{bedchrom}" + "." + config["bed"]["capture_kit"],
  output:
    vcf_dir + haplotypecaller_dir + "split_vcf/" + "{sample}.{bedchrom}_" + config["vcf"][var_caller]["default"]
  params:
    conda = get_conda_env(config["conda_env_yaml"],"gatk"),
    result_dir = vcf_dir + haplotypecaller_dir,
  threads: 4
  shell:
    "source activate {params.conda};"
    "gatk -T HaplotypeCaller "
        "-R {input.fa} "
        "-I {input.bam} "
        "-L {input.bed} "
        "| bgzip > {output}; " 
    "source deactivate; "

rule haplotypecaller_merge:
  input:
    expand(vcf_dir + haplotypecaller_dir + "split_vcf/{{sample}}.{chrom}_" + config["vcf"][var_caller]["default"], chrom=chromlist)
  output:
    vcf_dir + config["vcf"][var_caller]["type"] + "." + config["vcf"][var_caller]["mutation"] + "." + "{sample}" + "." + var_caller + ".vcf.gz"
  params:
    conda = get_conda_env(config["conda_env_yaml"], "gatk"),
  shell:
    "source activate {params.conda}; "
    "bcftools concat {input} | bcftools sort - | bgzip > {output}; "
    "tabix -f -p vcf {output}; "
    "source deactivate;"

