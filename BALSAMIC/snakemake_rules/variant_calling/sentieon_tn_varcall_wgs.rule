# vim: syntax=python tabstop=4 expandtab
# coding: utf-8


rule sentieon_tnscope_wgs_tumor_normal:
    input:
        ref = config["reference"]["reference_genome"],
        dbsnp = config["reference"]["dbsnp"],
        cosmic = config["reference"]["cosmic"],
        bamT = config_model.get_final_bam_name(bam_dir = bam_dir, sample_name = tumor_sample),
        bamN = config_model.get_final_bam_name(bam_dir = bam_dir, sample_name = normal_sample),
        recalT = expand(bam_dir + "tumor.recal_data.table"),
        recalN = expand(bam_dir + "normal.recal_data.table"),
    output:
        vcf_tnscope = vcf_dir + "SNV.somatic." + config["analysis"]["case_id"] + ".tnscope.vcf.gz",
        namemap_snv = vcf_dir + "SNV.somatic." + config["analysis"]["case_id"] + ".tnscope.sample_name_map",
    benchmark:
        Path(benchmark_dir, 'sentieon_TNscope_' + config[ "analysis" ][ "case_id" ] + ".tsv").as_posix()
    params:
        tumor = "TUMOR",
        normal = "NORMAL",
        sentieon_exec = config_model.sentieon.sentieon_exec,
        sentieon_lic = config_model.sentieon.sentieon_license,
        tmpdir = tempfile.mkdtemp(prefix=tmp_dir),
        algo = params.tnscope_wgs.algo,
        init_tumor_lod = params.tnscope_wgs.init_tumorLOD,
        min_tumor_lod = params.tnscope_wgs.min_tumorLOD,
        init_normal_lod = params.tnscope_wgs.init_normalLOD,
        min_normal_lod = params.tnscope_wgs.min_normalLOD,
        pcr_model = params.tnscope_wgs.pcr_model,
        disable_detect = params.tnscope_wgs.disable_detect,
        case_name = config["analysis"]["case_id"],
        housekeeper_id= {"id": config["analysis"]["case_id"],"tags": "research"}
    threads: 36
    resources:
        runtime=1440,
        mem_mb=80000
    message:
        ("Calling SNVs using Sentieon TNscope for sample {params.case_name}")
    shell:
        """
mkdir -p {params.tmpdir};
export TMPDIR={params.tmpdir};
export SENTIEON_TMPDIR={params.tmpdir};
export SENTIEON_LICENSE={params.sentieon_lic};

{params.sentieon_exec} driver \
-t {threads} \
-r {input.ref} \
-i {input.bamT} \
-q {input.recalT} \
-i {input.bamN} \
-q {input.recalN} \
--algo {params.algo} \
--disable_detector {params.disable_detect} \
--tumor_sample {params.tumor} \
--normal_sample {params.normal} \
--dbsnp {input.dbsnp} \
--cosmic {input.cosmic} \
--pcr_indel_mode {params.pcr_model} \
--min_init_tumor_lod {params.init_tumor_lod} \
--min_tumor_lod {params.min_tumor_lod} \
--min_init_normal_lod {params.init_normal_lod} \
--min_normal_lod {params.min_normal_lod} \
{output.vcf_tnscope};

echo -e \"{params.tumor}\\tTUMOR\\n{params.normal}\\tNORMAL\" > {output.namemap_snv};
rm -rf {params.tmpdir};
        """
