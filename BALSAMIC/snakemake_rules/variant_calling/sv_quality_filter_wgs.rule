
rule svdb_annotate_artefact_sv_wgs:
    input:
        vcf_svdb=vcf_dir + "SV.somatic." + config["analysis"]["case_id"] + ".svdb.vcf.gz",
    output:
        vcf_sv_artefact_obs=vcf_dir + "SV.somatic." + config["analysis"]["case_id"] + ".artefact_sv.svdb.vcf.gz",
    benchmark:
        Path(benchmark_dir,'svdb_annotate_artefact_sv.' + config["analysis"]["case_id"] + ".tsv")
    singularity:
        Path(singularity_image,config["bioinfo_tools"].get("svdb") + ".sif").as_posix()
    params:
        case_name=config["analysis"]["case_id"],
        artefact_sv_observations=artefact_sv_obs,
        vcf_artefact_obs=temp(vcf_dir + "SV.somatic." + config["analysis"]["case_id"] + ".svdb.artefact_sv.vcf"),
    threads:
        get_threads(cluster_config,"svdb_annotate_artefact_sv")
    message:
        "Annotating structural and copy number variants with artefact observations using SVDB for {params.case_name}",
    shell:
        """
if [[ -f "{params.artefact_sv_observations}" ]]; then
    svdb --query --bnd_distance 500 --overlap 0.80 \
    --in_occ Obs --out_occ ArtefactObs --in_frq Frq --out_frq ArtefactFrq \
    --db {params.artefact_sv_observations} --query_vcf {input.vcf_svdb} > {params.vcf_artefact_obs}
    bgzip -l 9 -c {params.vcf_artefact_obs} > {output.vcf_sv_artefact_obs};
else
    cp {input.vcf_svdb} {output.vcf_sv_artefact_obs};
fi

tabix -p vcf -f {output.vcf_sv_artefact_obs};

rm {params.vcf_artefact_obs} 
        """


rule bcftools_quality_filter_svdb_wgs:
    input:
        vcf_sv_artefact_obs=vcf_dir + "SV.somatic." + config["analysis"]["case_id"] + ".artefact_sv.svdb.vcf.gz",
    output:
        vcf_pass_svdb_research=vcf_dir + "SV.somatic." + config["analysis"]["case_id"] + ".svdb.research.vcf.gz",
    benchmark:
        Path(benchmark_dir,'bcftools_quality_filter_sv_' + config["analysis"]["case_id"] + ".tsv")
    singularity:
        Path(singularity_image,config["bioinfo_tools"].get("bcftools") + ".sif").as_posix()
    params:
        case_name=config["analysis"]["case_id"],
        loqusdb_artefact_sv_obs=[SVDB_FILTERS.loqusdb_artefact_sv_obs.tag_value,
                                 SVDB_FILTERS.loqusdb_artefact_sv_obs.filter_name],
    message:
        "Filtering merged research structural and copy number variants using bcftools for {params.case_name}"
    shell:
        """
    bcftools filter --threads {resources.threads} --include 'INFO/ArtefactObs <= {params.loqusdb_artefact_sv_obs[0]} || INFO/ArtefactObs == \".\"' --soft-filter '{params.loqusdb_artefact_sv_obs[1]}' --mode '+' {input.vcf_sv_artefact_obs} |\
    bcftools view --threads {resources.threads} -f .,PASS -o {output.vcf_pass_svdb_research} -O z ;

    tabix -p vcf -f {output.vcf_pass_svdb_research};
        """
