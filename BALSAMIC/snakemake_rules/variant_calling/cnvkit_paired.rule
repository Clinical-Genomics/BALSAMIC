# vim: syntax=python tabstop=4 expandtab
# coding: utf-8

__author__ = "Hassan Foroughi Asl"

from BALSAMIC.utils.rule import get_conda_env, get_chrom
from BALSAMIC import __version__ as bv


if config["analysis"]["sequencing_type"] == 'wgs':
    normal_bam = "{normal}.dedup.realign.bam".format(normal = get_sample_type(config["samples"], "normal")[0])
    tumor_bam = "{tumor}.dedup.realign.bam".format(tumor = get_sample_type(config["samples"], "tumor")[0])
    cnvkit_params = " --method wgs --annotate {input.refflat} "
    cnvkit_params += " -f {input.fasta} "
else:
    normal_bam = "normal.merged.bam"
    tumor_bam = "tumor.merged.bam"
    cnvkit_params = " --drop-low-coverage --method hybrid "
    cnvkit_params += " --targets {params.outdir}/targets.bed "
    cnvkit_params += " --output-reference {output.cnn} "

rule cnvkit_paired:
    input:
        fasta = config["reference"]["reference_genome"],
        refflat = config["reference"]["refflat"],
        bamN = bam_dir + normal_bam, 
        bamT = bam_dir + tumor_bam, 
    output:
        done = cnv_dir + "cnvkit_paired.done"
    params:
        extra = cnvkit_params,
        target = config["panel"]["capture_kit"] if "panel" in config.keys() else "None", 
        name = config["analysis"]["case_id"],
        outdir = cnv_dir,
        conda = get_conda_env(config["conda_env_yaml"], "cnvkit"),
    singularity: singularity_image
    benchmark:
        benchmark_dir + config["analysis"]["case_id"] + ".cnvkit_paired.tsv"
    shell:
        "source activate {params.conda}; "
        "[ {params.target} != None ] && cnvkit.py target {params.target} --annotate {input.refflat} --split -o {params.outdir}/targets.bed; "
        "cnvkit.py batch {input.bamT} "
            "--normal {input.bamN} " 
            "{params.extra} "
            "--output-dir {params.outdir} && touch {output.done}; "
