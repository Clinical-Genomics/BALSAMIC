# vim: syntax=python tabstop=4 expandtab
# coding: utf-8

__author__ = "Hassan Foroughi Asl"

from BALSAMIC.tools import get_result_dir, get_conda_env, get_chrom

bam_dir = get_result_dir(config) + "/bam/"
cnv_dir = get_result_dir(config) + "/cnv/"
vep_dir = get_result_dir(config) + "/vep/"

rule cnvkit_paired:
  input:
    refflat = "/mnt/hds/proj/bioinfo/BALSAMIC/references/GRCh37/GFF/refFlat.chr1_20_X_Y.txt",
    bamN = expand(bam_dir + "{mysample}.sorted.bam", mysample=get_sample_type(config["samples"], "normal")),
    bamT = expand(bam_dir + "{mysample}.sorted.bam", mysample=get_sample_type(config["samples"], "tumor")),
    bed = config["path"]["panel"] + config["bed"]["capture_kit"],
  output:
    cnv_dir + config["vcf"][var_caller]["default"]
  params:
    name = config["analysis"]["sample_id"],
    refurl = "http://hgdownload.cse.ucsc.edu/goldenPath/hg19/database/refFlat.txt.gz",
    bed = cnv_dir + "CNV." + config["bed"]["capture_kit"], 
    outdir = cnv_dir,
    conda = get_conda_env(config["conda_env_yaml"], "cnvkit"),
  shell:
    "source activate {params.conda}; "
    "cnvkit.py target {input.bed} --annotate {input.refflat}; --split -o {params.bed}; "
    "cnvkit.py batch {input.bamT} "
      "--normal {input.bamN} "
      "--targets {params.targetCNV} "
      "--output-reference {params.cnn} "
      "--output-dir {params.outdir}; "
    "source deactivate;"
