# vim: syntax=python tabstop=4 expandtab
# coding: utf-8

__author__ = "Hassan Foroughi Asl"

from BALSAMIC.tools import get_result_dir, get_conda_env, get_chrom

var_caller = "vardict"
vardict_dir = var_caller + "/"

bam_dir = get_result_dir(config) + "/bam/"
vcf_dir = get_result_dir(config) + "/vcf/"
vep_dir = get_result_dir(config) + "/vep/"

chromlist = get_chrom(config["path"]["panel"] + config["bed"]["capture_kit"])

rule vardict_paired:
  input:
    fa = config["path"]["genomefa"] + config["references"]["genomefa"],
    bamN = bam_dir + "normal.merged.bam", 
    bamT = bam_dir + "tumor.merged.bam",
    bed = vcf_dir + "split_bed/" + "{bedchrom}" + "." + config["bed"]["capture_kit"],
  output:
    vcf_dir + vardict_dir + "split_vcf/" + "{bedchrom}_" + config["vcf"][var_caller]["default"]
  params:
    af = "0.01",
    max_pval = "0.9",
    max_mm = "4.5",
    col_info = "-c 1 -S 2 -E 3 -g 4",
    name = config["analysis"]["sample_id"],
    conda = get_conda_env(config["conda_env_yaml"], "vardict"),
  shell:
    "source activate {params.conda}; "
    "vardict -G {input.fa} -f {params.af} -N {params.name} "
        "-b \"{input.bamT}|{input.bamN}\" "
        "{params.col_info} {input.bed} "
        "| testsomatic.R "
        "| var2vcf_paired.pl -P {params.max_pval} "
        "-m {params.max_mm} -M -f {params.af} -N {params.name} "
        "| bgzip > {output}; "
    "tabix -p vcf {output}; "
    "source deactivate;"

rule vardict_merge:
  input:
    expand(vcf_dir + vardict_dir + "split_vcf/{chrom}_" + config["vcf"][var_caller]["default"], chrom=chromlist) 
  output:
    vcf_dir + config["vcf"][var_caller]["type"] + "." + config["vcf"][var_caller]["mutation"] + "." + config["analysis"]["sample_id"] + "." + var_caller + ".vcf.gz"
  params:
    conda = get_conda_env(config["conda_env_yaml"], "vardict"),
  shell:
    "source activate {params.conda} ; "
    "bcftools concat {input} | bcftools sort - | bgzip > {output}; " 
    "tabix -f -p vcf {output}; "
    "source deactivate;" 

rule vardict_simple:
  input:
    vep_dir + config["vcf"][var_caller]["type"] + "." + config["vcf"][var_caller]["mutation"] + "." + config["analysis"]["sample_id"] + "." + var_caller + ".vcf.gz"
  output:
    tbl = vep_dir + config["vcf"][var_caller]["type"] + "." + config["vcf"][var_caller]["mutation"] + "." + config["analysis"]["sample_id"] + "." + var_caller + ".tbl", 
    vcf = vep_dir + "simple/" + config["vcf"][var_caller]["type"] + "." + config["vcf"][var_caller]["mutation"] + "." + config["analysis"]["sample_id"] + "." + var_caller + ".vcf.gz"
  params:
    name = config["analysis"]["sample_id"],
    MVL = "/mnt/hds/proj/bioinfo/BALSAMIC/references/GRCh37/MVL/MSK_IMPAKT_supp_S11_Cheng_2015.bed.gz",
    conda = get_conda_env(config["conda_env_yaml"], "bcftools")
  shell:
    "source activate {params.conda};"
    "bcftools annotate "
        "--annotations {input} "
        "--mark-sites +CALLER=VARDICT "
        "-h <(echo '##INFO=<ID=CALLER,Number=1,Type=String,Description=\"VariantCaller\">') "
        "--remove \"^INF/STATUS,INF/TYPE,INF/DP,INF/VD,INF/AF,INF/CSQ\","
        "\"^FMT/GT,FMT/DP,FMT/VD,FMT/AD,FMT/AF\" {input} "
    "| "
    "bcftools annotate "
        "--remove \"INF/CALLER=VARDICT\" - "
    "| "
    "sed '/^#CHROM/s/{params.name}-match/NORMAL/;/^#CHROM/s/{params.name}/TUMOR/' "
    "| "
    "bcftools annotate -a {params.MVL} -Oz "
        "-c CHROM,POS --mark-sites +\"MSK_MVL\" "
    " > {output.vcf}; "
    "HEADER=`bcftools view -h {input} | sed -n '/Consequence annotations/p' | sed 's/#.* //g;s/\">//g'`; "
    "bcftools view -f .,PASS -e 'STATUS !~ \".*Somatic\"' "
        "{output.vcf} "
    "| "
    "bcftools query --print-header "
        "-f \'%CHROM\\t%POS\\t%REF\\t%ALT\\t%TYPE\\t%CALLER"
        "\\t%DP\\t[%AD{{0}}\\t][%AD{{1}}\\t][%AF\\t]%STATUS\\t%CSQ\\t%MSK_MVL\\n\' "
        "-s TUMOR "
    "| "
    "awk -v FS=\"\\t\" -v OFS=\"\\t\" "
        "'NR==1 {{ gsub(\"#\", \"\", $0); gsub(\" \", \"\", $0); "
                   "for (i=1; i<=NF; i++) gsub(/\[[[:digit:]]*\]/,\"\",$i); "
                   "print $0,\"FILTERED\",$13,$12 }} "
        " NR>1  {{ if (($8+$9)==$7) {{ print $0,\"NO\",$13,$12 }} else {{ print $0,\"YES\",$13,$12 }} }}' "
    "| cut -f 1-9,14-16 "
    "| "
    "awk -v H=$HEADER -v OFS=\"\\t\" "
        "'NR==1 {{C=split(H,h,\"|\");"
        " sep=\"\\t\"; for (i=1; i<=C; i++) {{if (i==1) s = h[i]; else s = s sep h[i]}}; "
        " print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,s }} "
        " NR>1 {{split($12,a,\",\"); for (x in a) {{ C=split(a[x],b,\"|\"); "
        " sep=\"\\t\"; for (i=1; i<=C; i++) {{ if (b[i]==\"\") b[i]=\".\"; if (i==1) s = b[i]; else s = s sep b[i]}}; "
        " print $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,s }} }}' "
    "| awk -v OFS=\"\\t\" '{{ split($13,a,\"&\"); for (i in a) {{ $13=a[i]; print; }} }}' "
    "| bgzip > {output.tbl}"
