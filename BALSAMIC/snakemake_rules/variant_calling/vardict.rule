# vim: syntax=python tabstop=4 expandtab
# coding: utf-8

__author__ = "Hassan Foroughi Asl"

from BALSAMIC.tools import get_result_dir, get_conda_env

bam_dir = get_result_dir(config) + "/bam/"
vcf_dir = get_result_dir(config) + "/vcf/"

vardict_dir = "vardict/"

rule vardict_paired:
  input:
    fa = config["path"]["genomefa"] + config["references"]["genomefa"],
    bamN = bam_dir + "normal.merged.bam", 
    bamT = bam_dir + "tumor.merged.bam",
    bed = vcf_dir + "split_bed/" + "{bedchrom}" + "." + config["bed"]["variant_panel"],
  output:
    vcf_dir + vardict_dir + "split_vcf/" + "{bedchrom}_" + config["vcf"]["vardict"]["default"]
  params:
    af = "0.01",
    max_pval = "0.9",
    max_mm = "4.5",
    col_info = "-c 1 -S 2 -E 3 -g 4",
    name = config["analysis"]["sample_id"],
    conda = get_conda_env(config["conda_env_yaml"], "vardict"),
  shell:
    "source activate {params.conda}; "
    "vardict -G {input.fa} -f {params.af} -N {params.name} "
        "-b \"{input.bamT}|{input.bamN}\" "
        "{params.col_info} {input.bed} "
        "| testsomatic.R "
        "| var2vcf_paired.pl -P {params.max_pval} "
        "-m {params.max_mm} -M -f {params.af} -N {params.name} "
        "| bgzip > {output}; "
    "tabix -p vcf {output}; "
    "source deactivate;"

rule vardict_merge_chrom:
  input:
    expand(vcf_dir + vardict_dir + "split_vcf/{chrom}_" + config["vcf"]["vardict"]["default"], chrom=["1","10","11","12","13","14","15","16","17","18","19","2","20","21","22","3","4","5","6","7","8","9","X","Y"]) 
  output:
    vcf_dir + config["vcf"]["vardict"]["type"] + "/" + config["vcf"]["vardict"]["merged"]
  params:
    conda = get_conda_env(config["conda_env_yaml"], "vardict"),
  shell:
    "source activate {params.conda} ; "
    "bcftools concat -o {output} -O z {input}; " 
    "tabix -f -p vcf {output}; "
    "source deactivate;" 

rule vardict_simple:
  input:
    vcf_dir + config["vcf"]["vardict"]["type"] + "/" + config["vcf"]["vardict"]["merged"]
  output:
    vcf_dir + config["vcf"]["vardict"]["type"] + "/" + "simple." + config["vcf"]["vardict"]["merged"]
  params:
    name = config["analysis"]["sample_id"],
    conda = get_conda_env(config["conda_env_yaml"], "bcftools")
  shell:
    "source activate {params.conda};"
    "bcftools annotate "
        "--annotations {input} "
        "--mark-sites +CALLER=VARDICT "
        "-h <(echo '##INFO=<ID=CALLER,Number=1,Type=String,Description=\"VariantCaller\">') "
        "--remove \"^INF/STATUS,INF/TYPE,INF/DP,INF/VD,INF/AF\","
        "\"^FMT/GT,FMT/DP,FMT/VD,FMT/AD,FMT/AF\" {input} "
    "| "
    "bcftools annotate "
        "--remove \"INF/CALLER=VARDICT\" - "
    "| "
    "sed '/^#CHROM/s/{params.name}-match/NORMAL/;/^#CHROM/s/{params.name}/TUMOR/' > {output}"
