# vim: syntax=python tabstop=4 expandtab
# coding: utf-8

rule concatenate_reads:
    input:
        wake_up = result_dir + "start_analysis",
        fastqs_fwd=lambda wildcards: config_model.get_all_fastqs_for_sample(
            sample_name=wildcards.sample, fastq_types=[FastqName.FWD]
        ),
        fastqs_rev=lambda wildcards: config_model.get_all_fastqs_for_sample(
            sample_name=wildcards.sample, fastq_types=[FastqName.REV]
        ),
    output:
        fastq_fwd=fastq_dir + "concat.{sample}_1.fastq.gz",
        fastq_rev=fastq_dir + "concat.{sample}_2.fastq.gz",
    benchmark:
        Path(benchmark_dir, "concatenate_umi_reads_{sample}.tsv").as_posix()
    params:
        fastq_dir=config["analysis"]["fastq_path"],
        sample="{sample}",
    threads:
        get_threads(cluster_config, "concatenate")
    message:
        "Sample {params.sample} FASTQ concatenation per read-direction, before UMI extraction"
    shell:
        """
        cat {input.fastqs_fwd} > {output.fastq_fwd}
        cat {input.fastqs_rev} > {output.fastq_rev}
        """