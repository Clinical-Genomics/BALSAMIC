# vim: syntax=python tabstop=4 expandtab
# coding: utf-8

rule concatenate_read_1:
    output:
        fastq_r1 = concatenated_fastq_dir + "concatenated_{sample}_R_1.fastq.gz"
    benchmark:
        Path(benchmark_dir, "concatenate_read_1" + "{sample}.tsv").as_posix()
    singularity:
        Path(singularity_image, "balsamic.sif").as_posix()
    params:
        fastq_dir = config["analysis"]["fastq_path"],
        sample = "{sample}"
    threads:
        get_threads(cluster_config, 'concatenate')
    message:
        "Read 1 FASTQ concatenation."
    shell:
        """
        mkdir -p {concatenated_fastq_dir}
        cat {params.fastq_dir}/*_R_1.fastq.gz > {output.fastq_r1} 
        """

rule concatenate_read_2:
    output:
        fastq_r2 = concatenated_fastq_dir + "concatenated_{sample}_R_2.fastq.gz"
    benchmark:
        Path(benchmark_dir, "concatenate_read_2" + "{sample}.tsv").as_posix()
    singularity:
        Path(singularity_image, "balsamic.sif").as_posix()
    params:
        fastq_dir = config["analysis"]["fastq_path"],
        sample = "{sample}"
    threads:
        get_threads(cluster_config, 'concatenate')
    message:
        "Read 2 FASTQ concatenation for {params.sample}."
    shell:
        """
        mkdir -p {concatenated_fastq_dir}
        cat {params.fastq_dir}/*_R_2.fastq.gz > {output.fastq_r2} 
        """
