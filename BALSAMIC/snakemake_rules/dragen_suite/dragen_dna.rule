# vim: syntax=python tabstop=4 expandtab
# coding: utf-8

rule dragen_align_call:
    input:
        ref = config["reference"]["reference_genome"],
        read1 = Path(fastq_dir, "{sample}_1.fp.fastq.gz").as_posix(),
        read2 = Path(fastq_dir, "{sample}_2.fp.fastq.gz").as_posix(),
    output:
        bam = Path(bam_dir, config["analysis"]["case_id"] + ".bam").as_posix(),
        vcf = Path(vcf_dir, "SNV.somatic." + config["analysis"]["case_id"] + ".tnhaplotyper.vcf.gz").as_posix(),
    params:
        tmpdir = tmp_dir,
        sentieon_exec = config["SENTIEON_EXEC"],
        sentieon_lic = config["SENTIEON_LICENSE"],
    threads: get_threads(cluster_config, 'sentieon_TN_corealign')
    log:
        vcf_dir + config["analysis"]["case_id"] + ".corealign.log"
    benchmark:
        benchmark_dir + 'sentieon_TN_corealign_' + config["analysis"]["case_id"] + ".corealign.tsv"
    shell:
         """
echo "Running DRAGEN"
echo "Host: " $HOSTNAME

echo "Setting ulimit"
ulimit -n 65535
ulimit -u 16384

echo "Setting PATH"
export PATH=$PATH:/opt/edico/bin/

echo "will run the following DRAGEN command"
echo dragen -f \
-r {input.ref} \
--tumor-fastq1 {input.read1} \
--tumor-fastq2 {input.read2} \
--enable-variant-caller true \
--RGID-tumor DRAGEN_RGID \
--RGSM-tumor DRAGEN_RGSM \
--RGPL-tumor DRAGEM_RGPL \
--output-directory {params.output_dir} \
--output-file-prefix {params.output_file_prefix} \
--enable-duplicate-marking true \
--enable-map-align-output true
         """