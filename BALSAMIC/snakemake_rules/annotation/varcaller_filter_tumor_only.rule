# vim: syntax=python tabstop=4 expandtab
# coding: utf-8
# NGS filters for various scenarios


rule bcftools_filter_merged_research_tumor_only:
  input:
    vcf_snv_research = vep_dir + "{var_type}.somatic.{case_name}.merged.research.vcf.gz",
  output:
    vcf_pass_merged = vep_dir + "{var_type}.somatic.{case_name}.merged.research.filtered.pass.vcf.gz",
    bcftools_counts_research = vep_dir + "{var_type}.somatic.{case_name}.merged.research.filtered.pass.stats"
  benchmark:
    Path(benchmark_dir, 'bcftools_filter_merged_research_tumor_only_' + "{var_type}.somatic.{case_name}.tsv").as_posix()
  singularity:
    Path(singularity_image, config["bioinfo_tools"].get("bcftools") + ".sif").as_posix()
  params:
    pop_freq = [snv_filters["research"].pop_freq.tag_value, snv_filters["research"].pop_freq.filter_name],
    swegen_freq = [snv_filters["research"].swegen_snv_freq.tag_value, snv_filters["research"].swegen_snv_freq.filter_name],
    hard_filter_list = snv_filters["research"].get_bcftools_hard_filter_command(),
    housekeeper_id= {"id": config["analysis"]["case_id"],"tags": "research"},
    case_name = '{case_name}'
  threads:
    get_threads(cluster_config, 'bcftools_filter_tnscope_research_tumor_only')
  message:
    "Filtering TGA tumor-only merged annotated research variants using bcftools for {params.case_name}"
  shell:
    """

bcftools view -f PASS,triallelic_site --threads {threads} {input.vcf_snv_research} | \
bcftools filter --threads {threads} --include 'INFO/GNOMADAF_popmax <= {params.pop_freq[0]} || INFO/GNOMADAF_popmax == \".\"' --soft-filter '{params.pop_freq[1]}' --mode '+' | \
bcftools filter --threads {threads} --include 'INFO/SWEGENAF <= {params.swegen_freq[0]} || INFO/SWEGENAF == \".\"' --soft-filter '{params.swegen_freq[1]}' --mode '+' |\
bcftools view --threads {threads} -F "{params.hard_filter_list}" -o {output.vcf_pass_merged} -O z;

tabix -p vcf -f {output.vcf_pass_merged};

bcftools +counts {output.vcf_pass_merged} > {output.bcftools_counts_research};
    """

rule bcftools_filter_merged_clinical_tumor_only:
  input:
    vcf_snv_clinical = vep_dir + "{var_type}.somatic.{case_name}.merged.clinical.vcf.gz",
    namemap = vep_dir + "status_to_sample_id_namemap"
  output:
    vcf_pass_merged = vep_dir + "{var_type}.somatic.{case_name}.merged.clinical.filtered.pass.vcf.gz",
    bcftools_counts_clinical = vep_dir + "{var_type}.somatic.{case_name}.merged.clinical.filtered.pass.stats"
  benchmark:
    Path(benchmark_dir, 'bcftools_filter_merged_clinical_tumor_only_' + "{var_type}.somatic.{case_name}.tsv").as_posix()
  singularity:
    Path(singularity_image, config["bioinfo_tools"].get("bcftools") + ".sif").as_posix()
  params:
    artefact_freq = [snv_filters["clinical"].artefact_snv_freq.tag_value, snv_filters["clinical"].artefact_snv_freq.filter_name],
    pop_freq = [snv_filters["clinical"].pop_freq.tag_value, snv_filters["clinical"].pop_freq.filter_name],
    swegen_freq = [snv_filters["clinical"].swegen_snv_freq.tag_value, snv_filters["clinical"].swegen_snv_freq.filter_name],
    loqusdb_clinical_freq = [snv_filters["clinical"].loqusdb_clinical_snv_freq.tag_value, snv_filters["clinical"].loqusdb_clinical_snv_freq.filter_name],
    hard_filter_list = snv_filters["clinical"].get_bcftools_hard_filter_command(),
    housekeeper_id= {"id": config["analysis"]["case_id"],"tags": "clinical"},
    case_name = '{case_name}'
  threads:
    get_threads(cluster_config, 'bcftools_filter_tnscope_clinical_tumor_only')
  message:
    "Filtering TGA tumor-only merged annotated clinical variants using bcftools for {params.case_name}"
  shell:
    """

bcftools view {input.vcf_snv_clinical} | \
bcftools reheader --threads {threads} -s {input.namemap} | \
bcftools view -f PASS,triallelic_site --threads {threads} | \
bcftools filter --threads {threads} --include 'INFO/ArtefactFrq <= {params.artefact_freq[0]} || INFO/ArtefactFrq == \".\"' --soft-filter '{params.artefact_freq[1]}' --mode '+' |\
bcftools filter --threads {threads} --include 'INFO/GNOMADAF_popmax <= {params.pop_freq[0]} || INFO/GNOMADAF_popmax == \".\"' --soft-filter '{params.pop_freq[1]}' --mode '+' | \
bcftools filter --threads {threads} --include 'INFO/SWEGENAF <= {params.swegen_freq[0]} || INFO/SWEGENAF == \".\"' --soft-filter '{params.swegen_freq[1]}' --mode '+' | \
bcftools filter --threads {threads} --include 'INFO/Frq <= {params.loqusdb_clinical_freq[0]} || INFO/Frq == \".\"' --soft-filter '{params.loqusdb_clinical_freq[1]}' --mode '+' | \
bcftools view --threads {threads} -F "{params.hard_filter_list}" -o {output.vcf_pass_merged} -O z;

tabix -p vcf -f {output.vcf_pass_merged};

bcftools +counts {output.vcf_pass_merged} > {output.bcftools_counts_clinical};
    """


