# vim: syntax=python tabstop=4 expandtab
# coding: utf-8
# Filter TNscope umi pass variants 

rule ngs_filter_tnscope_umi:
    input:
        vcf = vep_dir + "{var_type}.somatic.{case_name}.TNscope_umi.all.vcf.gz",
    output:
        umi_vcf_pass = vep_dir + "{var_type}.somatic.{case_name}.TNscope_umi.pass.vcf.gz",
    benchmark:
        benchmark_dir + 'ngs_filter_' + "{var_type}.somatic.{case_name}.tnscope_umi.vep.tsv"
    singularity: 
        Path(singularity_image, config["bioinfo_tools"].get("bcftools") + ".sif").as_posix()
    params:
        housekeeper_id = {"id": config["analysis"]["case_id"], "tags": "clinical"},
        conda = config["bioinfo_tools"].get("bcftools"),
        case_name = '{case_name}'
    threads: 
        get_threads(cluster_config, 'ngs_filter_tnscope_umi')
    message: 
        "Filtering TNscope umi PASS variants using bcftools for {params.case_name}"
    shell:
        """
source activate {params.conda};
bcftools view -f PASS {input.vcf} -O z -o {output.umi_vcf_pass};
tabix -p vcf -f {output.umi_vcf_pass};
        """
