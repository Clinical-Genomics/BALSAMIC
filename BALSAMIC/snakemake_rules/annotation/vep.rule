# vim: syntax=python tabstop=4 expandtab
# coding: utf-8

__author__ = "Hassan Foroughi Asl"

from BALSAMIC.tools import get_result_dir, get_conda_env

bam_dir = get_result_dir(config) + "/bam/"
vcf_dir = get_result_dir(config) + "/vcf/"
#vcf_sv_dir = get_result_dir(config) + "/vcf/SV/"
vep_dir = get_result_dir(config) + "/vep/"

rule vep:
  input:
    vcf_dir + "{type}.{mutation}.{sample}.{caller}.vcf.gz"
  output:
    vep = vep_dir + "{type}.{mutation}.{sample}.{caller}.vcf",
    vcf = vep_dir + "{type}.{mutation}.{sample}.{caller}.vcf.gz"
  params:
    conda = get_conda_env(config["conda_env_yaml"],"ensembl-vep"),
    vep_fa = config["references"]["vep_fa"],
    vep_cache = config["path"]["vep_cache"]
  threads: 4
  shell:
    "source activate {params.conda}; "
    "vep_path=$(dirname $(realpath $(which vep))); "
    "vep "
        "--dir $vep_path "
        "--dir_cache {params.vep_cache} "
        "--dir_plugins $vep_path "
        "--input_file {input} "
        "--output_file {output.vep} "
        "--fork {threads} "
        "--vcf "
        "--fasta {params.vep_cache}{params.vep_fa} "
        "--everything "
        "-format vcf "
        "--offline "
        "--variant_class "
        "--cache "
        "--verbose "
        "--force_overwrite && "
    "bgzip -f -c {output.vep} > {output.vcf} && "
    "tabix -f -p vcf {output.vcf};"
    "source deactivate; "

