# vim: syntax=python tabstop=4 expandtab
# coding: utf-8

# Extract umi tags using the defined read structure.


rule sentieon_umiextract:
    input:
        fastq_r1 = concatenated_fastq_dir + "{sample}_R_1.umi_optimized.fastq.gz",
        fastq_r2 = concatenated_fastq_dir + "{sample}_R_2.umi_optimized.fastq.gz"
    output:
        ds_umi = temp(umi_dir + "{sample}_umiextract.fastq.gz")
    benchmark:
        Path(benchmark_dir, "sentieon_umiextract_{sample}.tsv").as_posix()
    params:
        tmpdir = tempfile.mkdtemp(prefix=tmp_dir),
        sentieon_install_dir = config["SENTIEON_INSTALL_DIR"],
        sentieon_exec = config["SENTIEON_EXEC"],
        sentieon_lic = config["SENTIEON_LICENSE"],
        ds_params= params.umiextract.read_structure,
        sample = "{sample}"
    threads:
        get_threads(cluster_config, "sentieon_umiextract")
    message:
        "Extracing UMI tags using sentieon for {params.sample}"
    shell:
        """
export LD_PRELOAD={params.sentieon_install_dir}/lib/libjemalloc.so.1
export MALLOC_CONF=lg_dirty_mult:-1

mkdir -p {params.tmpdir};
export TMPDIR={params.tmpdir};
export SENTIEON_TMPDIR={params.tmpdir};
export SENTIEON_LICENSE={params.sentieon_lic};

{params.sentieon_exec} umi extract \
{params.ds_params} {input.fastq_r1} {input.fastq_r2} \
-o {output.ds_umi};
        """
# Align the UMI-extracted reads


rule sentieon_bwa_umiextract:
    input:
        ref_fa = config["reference"]["reference_genome"],
        fastq_umi = umi_dir + "{sample}_umiextract.fastq.gz"
    output:
        align_umi = temp(umi_dir + "{sample}_align_umi.bam")
    benchmark:
        Path(benchmark_dir, "sentieon_bwa_umiextract_{sample}.tsv").as_posix()
    params:
        tmpdir = tempfile.mkdtemp(prefix=tmp_dir),
        sentieon_install_dir = config["SENTIEON_INSTALL_DIR"],
        sentieon_exec = config["SENTIEON_EXEC"],
        sentieon_lic = config["SENTIEON_LICENSE"],
        sample_id = '{sample}',
        sheader = params.umicommon.align_header,
        ip_bases = params.umicommon.align_intbases
    threads:
        get_threads(cluster_config, "sentieon_bwa_umiextract")
    message:
        "Aligning UMI extracted reads and sorting using sentieon bwa-mem for {params.sample_id}"
    shell:
        """
export LD_PRELOAD={params.sentieon_install_dir}/lib/libjemalloc.so.1
export MALLOC_CONF=lg_dirty_mult:-1

mkdir -p {params.tmpdir};
export TMPDIR={params.tmpdir};
export SENTIEON_TMPDIR={params.tmpdir};
export SENTIEON_LICENSE={params.sentieon_lic};

{params.sentieon_exec} bwa mem \
-R {params.sheader} \
-K {params.ip_bases} \
-p -t {threads} \
-C {input.ref_fa} {input.fastq_umi} | \
{params.sentieon_exec} util sort \
-r {input.ref_fa} \
--sam2bam \
-o {output.align_umi} -i - ;
       """
