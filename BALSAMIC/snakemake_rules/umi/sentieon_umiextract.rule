# vim: syntax=python tabstop=4 expandtab
# coding: utf-8

# Extract umi tags using the defined read structure. 
rule sentieon_umiextract:
    input:
        read1 = fastq_dir + "{sample}_1.fastq.gz",
        read2 = fastq_dir + "{sample}_2.fastq.gz"
    output:
        ds_umi = temp(umi_dir + "{sample}.umiextract.fastq.gz")
    benchmark:
        Path(benchmark_dir + "sentieon_umiextract_{sample}.tsv").as_posix()
    params:
        sentieon_exec = config["SENTIEON_EXEC"],
        sentieon_lic = config["SENTIEON_LICENSE"],
        ds_params= paramsumi.umiextract.read_structure,
        sample_id = "{sample}"
    threads:
        get_threads(cluster_config, "sentieon_umiextract")
    message: 
        "UMI tag extraction using sentieon for sample {params.sample_id}"
    shell:
        """
{params.sentieon_exec} umi extract \
{params.ds_params} {input.read1} {input.read2} \
-o {output.ds_umi};
        """

# Align the UMI-extracted reads
rule sentieon_bwa_umiextract:
    input:
        ref_fa = config["reference"]["reference_genome"],
        fastq_umi = expand(umi_dir + "{mysample}.umiextract.fastq.gz", mysample=get_sample_type(config["samples"],"tumor"))
    output:
        align_umi = temp(umi_dir + "{case_name}.align.umi.bam")
    benchmark:
        Path(benchmark_dir + "sentieon_bwa_umiextract_{case_name}.tsv").as_posix()
    params:
        sentieon_exec = config["SENTIEON_EXEC"],
        sentieon_lic = config["SENTIEON_LICENSE"],
        sample_id = '{case_name}',
        sheader = paramsumi.common.align_header,
        ip_bases = paramsumi.common.align_intbases
    threads: 
        get_threads(cluster_config, "sentieon_bwa_umiextract")
    message: 
        "Aligning of UMI extracted reads with sentieon bwa mem, sorting for sample {params.sample_id}"
    shell:
        """
{params.sentieon_exec} bwa mem \
-R {params.sheader} \
-K {params.ip_bases} \
-p -t {threads} \
-C {input.ref_fa} {input.fastq_umi} | \
{params.sentieon_exec} util sort \
-r {input.ref_fa} \
--sam2bam \
-o {output.align_umi} -i - ;
       """
