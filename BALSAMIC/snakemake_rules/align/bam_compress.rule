# vim: syntax=python tabstop=4 expandtab
# coding: utf-8


rule bam_compress:
    input:
        bam = lambda wildcards: sample_dict[wildcards.sample]["bam"]["final_bam"],
        fasta = config["reference"]["reference_genome"]
    output:
        cram = lambda wildcards: re.sub('bam$' 'cram', sample_dict[wildcards.sample]["bam"]["final_bam"])
    benchmark:
        Path(benchmark_dir, "SamtoolsCompressCram_" + "{sample}.tsv").as_posix()
    singularity:
        Path(singularity_image, config["bioinfo_tools"].get("picard") + ".sif").as_posix()
    params:
        sample_id = "{sample}",
        sample_type = lambda wildcards: sample_dict[wildcards.sample]["sample_type"]
    threads:
        get_threads(cluster_config, "bam_compress")
    message:
        ("Compressing bam to cram for {params.sample_type} : {params.sample_id}")
    shell:
        """
samtools view -h -T {input.fasta} --threads {threads} -C -o {output.cram} {input.bam}; 
samtools index {output.cram}; 
        """