# vim: syntax=python tabstop=4 expandtab
# coding: utf-8

def picard_flag(picarddup):
    if picarddup == "mrkdup":
        return "FALSE"
    else:
        return "TRUE"

# Following rule will take input fastq files, align them using bwa mem, and convert the output to sam format
rule bwa_mem:
    input:
        fa = config["reference"]["reference_genome"],
        read1 = Path(fastq_dir, "{sample}_1.fp.fastq.gz").as_posix(),
        read2 = Path(fastq_dir, "{sample}_2.fp.fastq.gz").as_posix(),
        refidx = expand(config["reference"]["reference_genome"] + ".{prefix}", prefix=["amb","ann","bwt","pac","sa"])
    output:
        bamout = temp(Path(bam_dir, "{sample}.sorted.bam").as_posix())
    params:
        bam_header = "'@RG\\tID:" +  "{sample}" + "\\tSM:" + "{sample}" + "\\tPL:ILLUMINAi'",
        tmpdir = tempfile.mkdtemp(prefix=tmp_dir),
        conda = get_conda_env(config["conda_env_yaml"],"bwa")
    threads: get_threads(cluster_config, "bwa_mem")
    singularity: singularity_image
    benchmark:
        Path(benchmark_dir, "bwa_mem_{sample}.bwa_mem.tsv").as_posix()
    shell:
        """
source activate {params.conda};
mkdir -p {params.tmpdir}; 
export TMPDIR={params.tmpdir}; 
bwa mem \
-t {threads} \
-R {params.bam_header}  \
-M \
-v 1 \
{input.fa} {input.read1} {input.read2} \
| samtools sort -T {params.tmpdir} --threads {threads} --output-fmt BAM -o {output.bamout} - ;
samtools index -@ {threads} {output.bamout};
        """

rule MarkDuplicates:
  input:
    Path(bam_dir, "{sample}.sorted.bam").as_posix()
  output:
    mrkdup = Path(bam_dir, "{sample}.sorted." + picarddup  + ".bam").as_posix(),
    stats = Path(bam_dir, "{sample}.sorted." + picarddup + ".txt").as_posix()
  params:
    tmpdir = tempfile.mkdtemp(prefix=tmp_dir),
    conda = get_conda_env(config["conda_env_yaml"],"picard"),
    rm_dup = picard_flag(picarddup)
  singularity: singularity_image
  benchmark:
    Path(benchmark_dir, "MarkDuplicates_{sample}.markduplicates.tsv").as_posix()
  shell:
    """
source activate {params.conda};
mkdir -p {params.tmpdir};
export TMPDIR={params.tmpdir};
java -jar -Djava.io.tmpdir={params.tmpdir} -Xms8G -Xmx16G $CONDA_PREFIX/share/picard.jar \
MarkDuplicates \
INPUT={input} \
OUTPUT={output.mrkdup} \
VALIDATION_STRINGENCY=SILENT \
MAX_FILE_HANDLES_FOR_READ_ENDS_MAP=1000 \
REMOVE_DUPLICATES={params.rm_dup} \
METRICS_FILE='{output.stats}';
samtools index {output.mrkdup};
    """
