# vim: syntax=python tabstop=4 expandtab
# coding: utf-8

# Following rule will take input fastq files, align them using bwa mem, and convert the output to sam format



rule postprocess_bam:
    input:
        bam = Path(bam_dir,"{sample_type}.{sample}.dedup_sorted.bam").as_posix()
    output:
        postprocessed_bam = Path(bam_dir, "{sample_type}.{sample}.dedup_sorted_addRG.bam").as_posix(),
    benchmark:
        Path(benchmark_dir,"postprocess_bam_{sample_type}.{sample}.tsv").as_posix()
    singularity:
        Path(singularity_image,config["bioinfo_tools"].get("picard") + ".sif").as_posix()
    params:
        tmpdir = tempfile.mkdtemp(prefix=tmp_dir),
        sample_id = "{sample}"
    threads:
        get_threads(cluster_config, "postprocess_bam")
    message:
        "Collapse readgroups for sample: {params.sample_id}"
    shell:
        """
mkdir -p {params.tmpdir};
export TMPDIR={params.tmpdir};

picard -Xmx75g AddOrReplaceReadGroups  \
-RGPU ILLUMINAi -RGID {wildcards.sample_type} -RGSM {wildcards.sample_type} \
-RGPL ILLUMINAi -RGLB ILLUMINAi -MAX_RECORDS_IN_RAM 1000000 \
-CREATE_INDEX true -CREATE_MD5_FILE true \
-TMP_DIR {params.tmpdir} \
-INPUT {input.bam}  \
-OUTPUT {output.postprocessed_bam}; 

samtools index {output.postprocessed_bam}; 

rm -rf {params.tmpdir};
        """
